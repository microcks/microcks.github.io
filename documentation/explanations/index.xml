<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Explanations on API Mocking and Testing | Microcks.io</title><link>https://microcks.io/documentation/explanations/</link><description>Recent content in Explanations on API Mocking and Testing | Microcks.io</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Thu, 23 Jan 2025 00:00:00 +0100</lastBuildDate><atom:link href="https://microcks.io/documentation/explanations/index.xml" rel="self" type="application/rss+xml"/><item><title>Deployment topologies</title><link>https://microcks.io/documentation/explanations/deployment-topologies/</link><pubDate>Tue, 10 Dec 2024 00:00:00 +0100</pubDate><guid>https://microcks.io/documentation/explanations/deployment-topologies/</guid><description>Introduction We often get the question from people who are adopting Microcks on the deployment toplogy: Where to deploy it and which personas to target?</description></item><item><title>Architecture &amp; deployment options</title><link>https://microcks.io/documentation/explanations/deployment-options/</link><pubDate>Tue, 15 Dec 2020 00:00:00 +0100</pubDate><guid>https://microcks.io/documentation/explanations/deployment-options/</guid><description>Introduction Microcks is a modular cloud-native application that can be deployed using many different installation methods.</description></item><item><title>Multi-artifacts support</title><link>https://microcks.io/documentation/explanations/multi-artifacts/</link><pubDate>Tue, 30 Apr 2024 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/explanations/multi-artifacts/</guid><description>Introduction Microcks can have multiple artifacts (one primary and many secondary) mapping to one API definition.</description></item><item><title>Dynamic mock content</title><link>https://microcks.io/documentation/explanations/dynamic-content/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0100</pubDate><guid>https://microcks.io/documentation/explanations/dynamic-content/</guid><description>Introduction Whilst we deeply think that &amp;ldquo;real-world&amp;rdquo; static values for request/response samples are crucial in order to fully understand the business usages and expectations of an API, we have to admit that it is more than often useful to introduce some kind of dynamically generated content for response.</description></item><item><title>Conformance testing</title><link>https://microcks.io/documentation/explanations/conformance-testing/</link><pubDate>Tue, 15 Dec 2020 00:00:00 +0100</pubDate><guid>https://microcks.io/documentation/explanations/conformance-testing/</guid><description>Introduction It is likely you experienced the painful situation of deploying to production only to find out that an API or Services you integrate with has broken its contract.</description></item><item><title>Service accounts</title><link>https://microcks.io/documentation/explanations/service-account/</link><pubDate>Sun, 01 Sep 2019 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/explanations/service-account/</guid><description>Introduction Microcks is using OpenId Connect and OAuth 2.0 bearer tokens to secure its frontend and API access.</description></item><item><title>Dispatcher &amp; dispatching rules</title><link>https://microcks.io/documentation/explanations/dispatching/</link><pubDate>Tue, 03 Mar 2020 00:00:00 +0100</pubDate><guid>https://microcks.io/documentation/explanations/dispatching/</guid><description>Introduction In order to provide smart mocks, Microcks is using Dispatcher and Dispatching Rules to find the most appropriate response to return when receiving a request.</description></item><item><title>Monitoring &amp; Observability</title><link>https://microcks.io/documentation/explanations/monitoring/</link><pubDate>Fri, 09 Sep 2022 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/explanations/monitoring/</guid><description>Introduction As a cloud-native application, we take great care of providing observability on what&amp;rsquo;s going on within a Microcks instance.</description></item></channel></rss>