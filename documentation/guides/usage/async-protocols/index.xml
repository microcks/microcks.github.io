<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Async Protocols on API Mocking and Testing | Microcks.io</title><link>https://microcks.io/documentation/guides/usage/async-protocols/</link><description>Recent content in Async Protocols on API Mocking and Testing | Microcks.io</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Mon, 13 May 2024 00:00:00 +0200</lastBuildDate><atom:link href="https://microcks.io/documentation/guides/usage/async-protocols/index.xml" rel="self" type="application/rss+xml"/><item><title>Kafka, Avro &amp; Schema Registry</title><link>https://microcks.io/documentation/guides/usage/async-protocols/avro-messaging/</link><pubDate>Fri, 12 Feb 2021 00:00:00 +0100</pubDate><guid>https://microcks.io/documentation/guides/usage/async-protocols/avro-messaging/</guid><description>Overview This guide shows you how to use Microcks for mocking and testing Avro encoding on top of Apache Kafka. You&amp;rsquo;ll see how Microcks can speed-up the sharing of Avro schema to consumers using a Schema Registry and we will check how Microcks can detect drifts between expected Avro format and the one really used.
Microcks supports Avro as an encoding format for mocking and testing asynchronous and event-driven APIs through AsyncAPI.</description></item><item><title>MQTT Mocking &amp; Testing</title><link>https://microcks.io/documentation/guides/usage/async-protocols/mqtt-support/</link><pubDate>Mon, 15 Feb 2021 00:00:00 +0100</pubDate><guid>https://microcks.io/documentation/guides/usage/async-protocols/mqtt-support/</guid><description>Overview This guide shows you how to use the Message Queuing Telemetry Transport (MQTT) protocol with Microcks. MQTT is a standard messaging protocol for the Internet of Things (IoT). It is used today in a wide variety of industries, such as automotive, manufacturing, telecommunications, oil and gas, etc.
Microcks supports MQTT as a protocol binding for AsyncAPI. That means that Microcks is able to connect to a MQTT broker for publishing mock messages as soon as it receives a valid AsyncAPI Specification and to connect to any MQTT broker in your organization to check that flowing messages are compliant to the schema described within your specification.</description></item><item><title>RabbitMQ Mocking &amp; Testing</title><link>https://microcks.io/documentation/guides/usage/async-protocols/rabbitmq-support/</link><pubDate>Tue, 22 Nov 2022 00:00:00 +0100</pubDate><guid>https://microcks.io/documentation/guides/usage/async-protocols/rabbitmq-support/</guid><description>Overview This guide shows you how to use the RabbitMQ protocol with Microcks. RabbitMQ is one of the most popular open source message broker that is supporting different protocols and more specifically AMQP 0.9.1, RabbitMQ was originally developed for.
Microcks supports RabbitMQ/AMQP as a protocol binding for AsyncAPI. That means that Microcks is able to connect to a RabbitMQ broker for publishing mock messages as soon as it receives a valid AsyncAPI Specification and to connect to any RabbitMQ broker in your organization to check that flowing messages are compliant to the schema described within your specification.</description></item><item><title>NATS Mocking &amp; Testing</title><link>https://microcks.io/documentation/guides/usage/async-protocols/nats-support/</link><pubDate>Mon, 30 Jan 2023 00:00:00 +0100</pubDate><guid>https://microcks.io/documentation/guides/usage/async-protocols/nats-support/</guid><description>Overview This guide shows you how to use a NATS protocol with Microcks. NATS is a Cloud Native, Open Source and High-performance Messaging technology. It is a single technology that enables applications to securely communicate across any combination of cloud vendors, on-premise, edge, web and mobile, and devices. Client APIs are provided in over 40 languages and frameworks and you can check out the full list of clients.
Microcks supports NATS as a protocol binding for AsyncAPI.</description></item><item><title>Pub/Sub Mocking &amp; Testing</title><link>https://microcks.io/documentation/guides/usage/async-protocols/googlepubsub-support/</link><pubDate>Wed, 08 Feb 2023 00:00:00 +0100</pubDate><guid>https://microcks.io/documentation/guides/usage/async-protocols/googlepubsub-support/</guid><description>Overview This guide shows you how to use a Google Pub/Sub messaging service with Microcks. Pub/Sub is an asynchronous and scalable messaging service that decouples services producing messages from services processing those messages. Pub/Sub allows services to communicate asynchronously, with latencies on the order of 100 milliseconds.
Microcks supports Google Pub/Sub as a protocol binding for AsyncAPI. That means that Microcks is able to connect to a Google Pub/Sub service for publishing mock messages as soon as it receives a valid AsyncAPI Specification and to connect to any Google Pub/Sub broker provided that Google Cloud Platform to check that flowing messages are compliant to the schema described within your specification.</description></item><item><title>SQS/SNS Mocking &amp; Testing</title><link>https://microcks.io/documentation/guides/usage/async-protocols/aws-sqs-sns-support/</link><pubDate>Tue, 06 Jun 2023 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/guides/usage/async-protocols/aws-sqs-sns-support/</guid><description>Overview This guide shows you how to use a Amazon SQS and Amazon SNS messaging services with Microcks. As those two services are very frequently used in combination, we decided to cover both of them in the same guide as principles and configuration are very similar. However, Microcks may provide mocking and testing services for SQS only and mocking and testing services for SNS only. You don&amp;rsquo;t have to use both to benefit from Microcks features.</description></item></channel></rss>