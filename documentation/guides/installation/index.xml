<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Installation on API Mocking and Testing | Microcks.io</title><link>https://microcks.io/documentation/guides/installation/</link><description>Recent content in Installation on API Mocking and Testing | Microcks.io</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Wed, 22 Jan 2025 00:00:00 +0100</lastBuildDate><atom:link href="https://microcks.io/documentation/guides/installation/index.xml" rel="self" type="application/rss+xml"/><item><title>As a Docker Desktop Extension</title><link>https://microcks.io/documentation/guides/installation/docker-desktop-extension/</link><pubDate>Tue, 30 Apr 2024 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/guides/installation/docker-desktop-extension/</guid><description>This guide shows you how to install Microcks as a Docker Desktop Extension on your local machine. This way of installing Microcks is very convenient for people wanted to start quickly with most common Microcks capabilities and without hitting the terminal ðŸ‘»
Docker Desktop is a simple-to-install application for Mac, Windows, or Linux that allows you to create and share containerized applications and microservices. Docker Desktop includes the Docker Engine, the Docker CLI client, Docker Compose, Docker Content Trust, Kubernetes, and the Credential Helper.</description></item><item><title>With Docker Compose</title><link>https://microcks.io/documentation/guides/installation/docker-compose/</link><pubDate>Tue, 30 Apr 2024 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/guides/installation/docker-compose/</guid><description>This guide shows you how to install and run Microcks using Docker Compose.
Docker Compose is a tool for easily testing and running multi-container applications. Microcks offers a simple way to set up the minimal required containers to have a functional environment on your local computer.
Usage To get started, make sure you have Docker installed on your system.
In your terminal issue the following commands:
Clone this repository. git clone https://github.</description></item><item><title>With Podman Compose</title><link>https://microcks.io/documentation/guides/installation/podman-compose/</link><pubDate>Tue, 30 Apr 2024 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/guides/installation/podman-compose/</guid><description>This guide shows you how to install and run Microcks using Docker Compose.
Podman Compose is a tool for easily testing and running multi-container applications. Microcks offers a simple way to set up the minimal required containers to have a functional environment on your local computer. This procedure has been successfully tested with Podman 2.1.1 onto Fedora 33+ and should be OK on CentOS Stream 8+ and RHEL 8+ distributions too.</description></item><item><title>On Kind with Helm</title><link>https://microcks.io/documentation/guides/installation/kind-helm/</link><pubDate>Tue, 30 Apr 2024 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/guides/installation/kind-helm/</guid><description>Overview This guide will walk you through the different steps of running a full Microcks installation on your laptop using Kind. The step #4 is actually optional and may only be of interest if you&amp;rsquo;d like to use Asynchronous features of Microcks.
The installation notes were ran on an Apple Mac book M2 but those steps would sensibly be the same on any Linux machine.
Let&amp;rsquo;s go ðŸš€
1. Preparation As being on a Mac, people usually use brew to install kind.</description></item><item><title>On Minikube with Helm</title><link>https://microcks.io/documentation/guides/installation/minikube-helm/</link><pubDate>Tue, 30 Apr 2024 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/guides/installation/minikube-helm/</guid><description>Overview This guide will walk you through the different steps of running a full Microcks installation on your laptop using Minikube. The step #4 is actually optional and may only be of interest if you&amp;rsquo;d like to use Asynchronous features of Microcks.
The installation notes were ran on an Apple Mac book M2 but those steps would sensibly be the same on any Linux machine.
Let&amp;rsquo;s go ðŸš€
1. Preparation As being on a Mac, people usually use brew to install minikube.</description></item><item><title>On Kubernetes with Operator</title><link>https://microcks.io/documentation/guides/installation/kubernetes-operator/</link><pubDate>Tue, 30 Apr 2024 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/guides/installation/kubernetes-operator/</guid><description>Overview This guide shows you how to deploy and use the Microcks Kubernetes Operator. If you&amp;rsquo;re not familiar with Operators, we recommend having a read of this excellent introduction on Kubernetes Operators and their benefits.
The Microcks Operator offers advanced features comparing to the Helm chart and can be used in a complete GitOps approach where all the content of a Microcks instance can be pulled from a Git repository. Deploying this practice will allow the automated creation of fully-configured instances on demand, in seconds or minutes, and in a full reproducible way.</description></item><item><title>Adding external dependencies</title><link>https://microcks.io/documentation/guides/installation/externals/</link><pubDate>Thu, 26 Oct 2023 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/guides/installation/externals/</guid><description>Overview This guide is a walkthrough, that exposes Microcks extension capabilities and explain how to leverage them. By the end of this tour, you should be able to apply your customizations and figure out the possibilities it offers.
ðŸ’¡ This guide is actually an adaptation of the excellent CNAM&amp;rsquo;s blog post here: Extend Microcks with custom libs and code that provides comprehensive samples on how to apply the below principles.</description></item></channel></rss>