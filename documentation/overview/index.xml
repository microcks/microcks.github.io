<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Overview on API Mocking and Testing | Microcks.io</title><link>https://microcks.io/documentation/overview/</link><description>Recent content in Overview on API Mocking and Testing | Microcks.io</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Wed, 22 Jan 2025 00:00:00 +0100</lastBuildDate><atom:link href="https://microcks.io/documentation/overview/index.xml" rel="self" type="application/rss+xml"/><item><title>What is Microcks?</title><link>https://microcks.io/documentation/overview/what-is-microcks/</link><pubDate>Mon, 29 Apr 2024 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/overview/what-is-microcks/</guid><description>Microcks is a tool for mocking and testing your APIs and microservices. It leverages API standards to provide a uniform and multi-protocol approach for simulating complex distributed environments and validating service components in isolation.
Microcks facilitates rapid simulation generation, automated API testing, and seamless CI/CD integration, streamlining development and deployment processes. Microcks empowers teams to optimize services and accelerate product releases, gaining a competitive advantage.
Microcks is a Cloud Native Computing Foundation (CNCF) Sandbox project and a 100% Open Source and community driven initiative.</description></item><item><title>Main Concepts</title><link>https://microcks.io/documentation/overview/main-concepts/</link><pubDate>Mon, 29 Apr 2024 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/overview/main-concepts/</guid><description>Before diving in, it is useful to briefly introduce or recall concepts or terminology we frequently use in the documentation.
Artifacts In Microcks, an Artifact is an asset that holds valuable information on how your API or microservices are expected to work. It is usually represented by a file on your local machine or in a remote version control system.
One of Microcks&amp;rsquo;s beauties is that it uses standard specifications or standard tooling files as Artifacts, allowing you to reuse existing assets.</description></item><item><title>Alternatives</title><link>https://microcks.io/documentation/overview/alternatives/</link><pubDate>Tue, 18 Jun 2024 00:00:00 +0200</pubDate><guid>https://microcks.io/documentation/overview/alternatives/</guid><description>Comparison with alternatives is always a tough question ðŸ¤”
Please check this neutral Wikipedia page for more inisghts: Comparison of API simulation tools
If you would like a more opinionated description on &amp;ldquo;How Microcks compares to Pact for Contract Testing?&amp;rdquo;, you may want to read this Medium blog post by one of the project co-founder: Microcks and Pact for API contract testing.
Finally, if you&amp;rsquo;re wondering why we think Microcks is unique in terms of Development Lifecycle coverage, you may check How Microcks fit and unify Inner and Outer Loops for cloud-native development the other co-founder of the project.</description></item></channel></rss>